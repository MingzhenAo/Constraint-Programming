array [1..2] of int: X_INTRODUCED_1_ = [1,-1];
var {111,212,221}: Vo2:: output_var;
var {111,212,221}: Vo3:: output_var;
var {111,212,221}: Vo4:: output_var;
var 1..2: X_INTRODUCED_2_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_3_ ::var_is_introduced :: is_defined_var;
var {11,21,22}: X_INTRODUCED_4_ ::var_is_introduced :: is_defined_var;
var 1..2: X_INTRODUCED_5_ ::var_is_introduced ;
var bool: X_INTRODUCED_6_ ::var_is_introduced :: is_defined_var;
var 1..2: X_INTRODUCED_7_ ::var_is_introduced ;
var bool: X_INTRODUCED_9_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_10_ ::var_is_introduced :: is_defined_var;
var 1..2: X_INTRODUCED_11_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_12_ ::var_is_introduced :: is_defined_var;
var 11..22: X_INTRODUCED_13_ ::var_is_introduced :: is_defined_var;
var -10..10: X_INTRODUCED_14_ ::var_is_introduced ;
var bool: X_INTRODUCED_15_ ::var_is_introduced :: is_defined_var;
var -10..10: X_INTRODUCED_16_ ::var_is_introduced ;
var bool: X_INTRODUCED_17_ ::var_is_introduced :: is_defined_var;
var 1..2: X_INTRODUCED_18_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_19_ ::var_is_introduced :: is_defined_var;
var 11..22: X_INTRODUCED_20_ ::var_is_introduced :: is_defined_var;
var -10..10: X_INTRODUCED_21_ ::var_is_introduced ;
var bool: X_INTRODUCED_22_ ::var_is_introduced :: is_defined_var;
var -10..10: X_INTRODUCED_23_ ::var_is_introduced ;
var bool: X_INTRODUCED_24_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_25_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_26_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_27_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_28_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_29_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_32_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_33_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_35_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_37_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_38_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_39_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_40_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_42_ ::var_is_introduced :: is_defined_var;
constraint int_lin_ne(X_INTRODUCED_1_,[Vo2,Vo3],0);
constraint int_lin_ne(X_INTRODUCED_1_,[Vo2,Vo4],0);
constraint int_lin_ne(X_INTRODUCED_1_,[Vo3,Vo4],0);
constraint int_div(Vo2,100,X_INTRODUCED_2_):: defines_var(X_INTRODUCED_2_);
constraint int_div(Vo2,10,X_INTRODUCED_4_):: defines_var(X_INTRODUCED_4_);
constraint int_mod(X_INTRODUCED_4_,10,X_INTRODUCED_5_);
constraint int_mod(Vo2,10,X_INTRODUCED_7_);
constraint int_div(Vo3,100,X_INTRODUCED_11_):: defines_var(X_INTRODUCED_11_);
constraint int_div(Vo3,10,X_INTRODUCED_13_):: defines_var(X_INTRODUCED_13_);
constraint int_mod(X_INTRODUCED_13_,10,X_INTRODUCED_14_);
constraint int_mod(Vo3,10,X_INTRODUCED_16_);
constraint int_div(Vo4,100,X_INTRODUCED_18_):: defines_var(X_INTRODUCED_18_);
constraint int_div(Vo4,10,X_INTRODUCED_20_):: defines_var(X_INTRODUCED_20_);
constraint int_mod(X_INTRODUCED_20_,10,X_INTRODUCED_21_);
constraint int_mod(Vo4,10,X_INTRODUCED_23_);
constraint array_bool_and([X_INTRODUCED_33_,X_INTRODUCED_29_,X_INTRODUCED_28_,X_INTRODUCED_26_,X_INTRODUCED_24_,X_INTRODUCED_19_,X_INTRODUCED_15_,X_INTRODUCED_6_,X_INTRODUCED_3_],false);
constraint array_bool_and([X_INTRODUCED_35_,X_INTRODUCED_33_,X_INTRODUCED_24_,X_INTRODUCED_19_,X_INTRODUCED_15_,X_INTRODUCED_12_,X_INTRODUCED_10_,X_INTRODUCED_9_,X_INTRODUCED_6_],false);
constraint array_bool_and([X_INTRODUCED_40_,X_INTRODUCED_37_,X_INTRODUCED_30_,X_INTRODUCED_29_,X_INTRODUCED_19_,X_INTRODUCED_12_,X_INTRODUCED_10_,X_INTRODUCED_9_,X_INTRODUCED_6_],false);
constraint array_bool_and([X_INTRODUCED_38_,X_INTRODUCED_35_,X_INTRODUCED_30_,X_INTRODUCED_27_,X_INTRODUCED_24_,X_INTRODUCED_15_,X_INTRODUCED_12_,X_INTRODUCED_10_,X_INTRODUCED_3_],false);
constraint array_bool_and([X_INTRODUCED_42_,X_INTRODUCED_31_,X_INTRODUCED_30_,X_INTRODUCED_29_,X_INTRODUCED_19_,X_INTRODUCED_12_,X_INTRODUCED_10_,X_INTRODUCED_9_,X_INTRODUCED_6_],false);
constraint array_bool_or([X_INTRODUCED_39_,X_INTRODUCED_32_,X_INTRODUCED_25_],true);
constraint int_eq_reif(X_INTRODUCED_2_,2,X_INTRODUCED_3_):: defines_var(X_INTRODUCED_3_);
constraint int_eq_reif(X_INTRODUCED_5_,1,X_INTRODUCED_6_):: defines_var(X_INTRODUCED_6_);
constraint int_eq_reif(X_INTRODUCED_2_,1,X_INTRODUCED_9_):: defines_var(X_INTRODUCED_9_);
constraint int_eq_reif(X_INTRODUCED_7_,1,X_INTRODUCED_10_):: defines_var(X_INTRODUCED_10_);
constraint int_eq_reif(X_INTRODUCED_11_,2,X_INTRODUCED_12_):: defines_var(X_INTRODUCED_12_);
constraint int_eq_reif(X_INTRODUCED_14_,1,X_INTRODUCED_15_):: defines_var(X_INTRODUCED_15_);
constraint int_eq_reif(X_INTRODUCED_16_,2,X_INTRODUCED_17_):: defines_var(X_INTRODUCED_17_);
constraint int_eq_reif(X_INTRODUCED_18_,2,X_INTRODUCED_19_):: defines_var(X_INTRODUCED_19_);
constraint int_eq_reif(X_INTRODUCED_21_,2,X_INTRODUCED_22_):: defines_var(X_INTRODUCED_22_);
constraint int_eq_reif(X_INTRODUCED_23_,1,X_INTRODUCED_24_):: defines_var(X_INTRODUCED_24_);
constraint array_bool_and([X_INTRODUCED_24_,X_INTRODUCED_22_,X_INTRODUCED_19_,X_INTRODUCED_17_,X_INTRODUCED_15_,X_INTRODUCED_12_,X_INTRODUCED_10_,X_INTRODUCED_9_,X_INTRODUCED_6_],X_INTRODUCED_25_):: defines_var(X_INTRODUCED_25_);
constraint int_eq_reif(X_INTRODUCED_7_,2,X_INTRODUCED_26_):: defines_var(X_INTRODUCED_26_);
constraint int_eq_reif(X_INTRODUCED_5_,2,X_INTRODUCED_27_):: defines_var(X_INTRODUCED_27_);
constraint int_eq_reif(X_INTRODUCED_11_,1,X_INTRODUCED_28_):: defines_var(X_INTRODUCED_28_);
constraint int_eq_reif(X_INTRODUCED_16_,1,X_INTRODUCED_29_):: defines_var(X_INTRODUCED_29_);
constraint int_eq_reif(X_INTRODUCED_21_,1,X_INTRODUCED_30_):: defines_var(X_INTRODUCED_30_);
constraint int_eq_reif(X_INTRODUCED_23_,2,X_INTRODUCED_31_):: defines_var(X_INTRODUCED_31_);
constraint array_bool_and([X_INTRODUCED_31_,X_INTRODUCED_30_,X_INTRODUCED_29_,X_INTRODUCED_28_,X_INTRODUCED_27_,X_INTRODUCED_19_,X_INTRODUCED_15_,X_INTRODUCED_10_,X_INTRODUCED_3_],X_INTRODUCED_32_):: defines_var(X_INTRODUCED_32_);
constraint int_eq_reif(X_INTRODUCED_21_,0,X_INTRODUCED_33_):: defines_var(X_INTRODUCED_33_);
constraint int_eq_reif(X_INTRODUCED_16_,0,X_INTRODUCED_35_):: defines_var(X_INTRODUCED_35_);
constraint int_eq_reif(X_INTRODUCED_14_,2,X_INTRODUCED_37_):: defines_var(X_INTRODUCED_37_);
constraint int_eq_reif(X_INTRODUCED_18_,1,X_INTRODUCED_38_):: defines_var(X_INTRODUCED_38_);
constraint array_bool_and([X_INTRODUCED_38_,X_INTRODUCED_37_,X_INTRODUCED_30_,X_INTRODUCED_29_,X_INTRODUCED_26_,X_INTRODUCED_24_,X_INTRODUCED_12_,X_INTRODUCED_6_,X_INTRODUCED_3_],X_INTRODUCED_39_):: defines_var(X_INTRODUCED_39_);
constraint int_eq_reif(X_INTRODUCED_23_,0,X_INTRODUCED_40_):: defines_var(X_INTRODUCED_40_);
constraint int_eq_reif(X_INTRODUCED_14_,0,X_INTRODUCED_42_):: defines_var(X_INTRODUCED_42_);
solve  satisfy;
